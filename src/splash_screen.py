import curses
import time

class Splash:
    def __init__(self, win):
        self.win = win

    def splash_screen(self):
        self.win.clear()
        
        curses.init_pair(1, curses.COLOR_WHITE, curses.COLOR_WHITE)
        WHITE = curses. color_pair(1)
        curses.init_pair(2,curses.COLOR_GREEN, curses.COLOR_GREEN)
        GREEN = curses.color_pair(2)
        curses.init_pair(3, curses.COLOR_GREEN, curses.COLOR_GREEN)
        GREEN = curses.color_pair(3)
        curses.init_pair(4, curses.COLOR_MAGENTA, curses.COLOR_MAGENTA)
        MAGENTA = curses.color_pair(4)

        alturaDaTela, comprimentoDaTela = self.win.getmaxyx()

        texto = [
                ["#","#","#","#","#","#","#","#","#","#"," "," "," "," "," ","#","#","#","#","#","#","#","#","#","#","#","#","#"," "," ","#","#","#","#","#","#","#","#","#","#","#"," "," ","#","#","#"," "," "," "," "," "," ","#","#","#"," "," ","#","#","#","#","#","#","#","#","#"],
                ["#","#","#","#","#","#","#","#","#","#","#","#","#"," "," ","#","#","#","#","#","#","#","#","#","#","#","#","#"," "," ","#","#","#","#","#","#","#","#","#","#","#"," "," ","#","#","#"," "," "," "," "," "," ","#","#","#"," "," ","#","#","#","#","#","#","#","#","#"],
                ["#","#","#"," "," "," "," "," "," "," ","#","#","#"," "," ","#","#","#"," "," "," "," "," "," "," ","#","#","#"," "," ","#","#","#"," "," "," "," "," "," "," "," "," "," ","#","#","#"," "," "," "," "," "," ","#","#","#"," "," ","#","#","#"," "," "," "," "," "," "],
                ["#","#","#"," "," "," "," "," "," "," ","#","#","#"," "," ","#","#","#"," "," "," "," "," "," "," ","#","#","#"," "," ","#","#","#"," "," "," "," "," "," "," "," "," "," ","#","#","#"," "," "," "," "," "," ","#","#","#"," "," ","#","#","#"," "," "," "," "," "," "],
                ["#","#","#","#","#","#","#","#","#","#"," "," "," "," "," ","#","#","#"," "," "," "," "," "," "," ","#","#","#"," "," ","#","#","#"," "," "," "," ","#","#","#","#"," "," ","#","#","#"," "," "," "," "," "," ","#","#","#"," "," ","#","#","#","#","#","#"," "," "," "],
                ["#","#","#"," "," "," "," "," "," "," ","#","#","#"," "," ","#","#","#"," "," "," "," "," "," "," ","#","#","#"," "," ","#","#","#"," "," "," "," "," "," ","#","#"," "," ","#","#","#"," "," "," "," "," "," ","#","#","#"," "," ","#","#","#"," "," "," "," "," "," "],
                ["#","#","#"," "," "," "," "," "," "," ","#","#","#"," "," ","#","#","#"," "," "," "," "," "," "," ","#","#","#"," "," ","#","#","#"," "," "," "," "," "," ","#","#"," "," ","#","#","#"," "," "," "," "," "," ","#","#","#"," "," ","#","#","#"," "," "," "," "," "," "],
                ["#","#","#"," "," "," "," "," "," "," ","#","#","#"," "," ","#","#","#","#","#","#","#","#","#","#","#","#","#"," "," ","#","#","#","#","#","#","#","#","#","#","#"," "," ","#","#","#","#","#","#","#","#","#","#","#","#"," "," ","#","#","#","#","#","#","#","#","#"],
                ["#","#","#"," "," "," "," "," "," "," ","#","#","#"," "," ","#","#","#","#","#","#","#","#","#","#","#","#","#"," "," ","#","#","#","#","#","#","#","#","#","#","#"," "," ","#","#","#","#","#","#","#","#","#","#","#","#"," "," ","#","#","#","#","#","#","#","#","#"]
            ]

        for i in range(len(texto)):
            for j in range(len(texto[i])):
                alturaDaArray = len(texto)
                comprimentoDaArray = len(texto[i])
                y = (alturaDaTela - alturaDaArray) // 2
                x = (comprimentoDaTela - comprimentoDaArray) // 2

                y = y+i
                x = x+j

                if texto[i][j]=="#":
                    time.sleep(0.01)
                    self.win.attron(GREEN)
                    self.win.addstr(y+2,x-2, texto[i][j])
                    self.win.attron(GREEN)
                    self.win.attron(MAGENTA)
                    self.win.addstr(y+1,x-1, texto[i][j])
                    self.win.attron(MAGENTA)
                    self.win.attron(WHITE)
                    self.win.addstr(y,x,texto[i][j])
                    self.win.attroff(WHITE)
                
                self.win.refresh()


